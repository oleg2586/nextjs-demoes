{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Rct\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList'; // const DUMMY_MEETUPS = [\n//     {\n//         id:'h3',\n//         title:\"First Meetup\",\n//         image:'https://costar.brightspotcdn.com/dims4/default/e1b9846/2147483647/strip/true/crop/2100x1485+0+0/resize/2100x1485!/quality/100/?url=http%3A%2F%2Fcostar-brightspot.s3.amazonaws.com%2F10%2Ff0%2F261bc7174a77905a8ba8c5a2a4aa%2Fchicago.jpg',\n//         address:'some city in some town',\n//         description:'THes is a first meetup'\n//     },\n//     {\n//         id:'h1',\n//         title:\"First Meetup City\",\n//         image:'https://blog.se.com/wp-content/uploads/2020/12/GettyImages-946784972_1200x628.jpg',\n//         address:'some city in some town 2',\n//         description:'THes is a first meetup 2'\n//     }\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n}\n\n; // export async function getServerSideProps(context){\n//     const req=context.req;\n//     const res=context.res;\n//     //fetch data from API\n//     return {\n//         props:{\n//             meetups:DUMMY_MEETUPS\n//         }\n//     };\n// };\n\nexport async function getStaticProps() {\n  //fetch data from API\n  const client = await MongoClient.connect('mongodb+srv://olegi4:457465@cluster0.0r1jbpg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups'); // const response = await meetupsCollections.insertOne(data);\n\n  const meetupss = await meetupsCollections.find().toArray();\n  client.close();\n  return {\n    props: {\n      // meetups:DUMMY_MEETUPS\n      meetups: meetupss.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 //every 10 seconds data will me regenerated to update itself\n\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["D:/Rct/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollections","collection","meetupss","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAmBC,KAAnB,EAAyB;AACrB,sBAAQ,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;;AAAA,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,cAAf,GAA+B;AAClC;AACA,QAAMC,MAAM,GAAE,MAAMN,WAAW,CAACO,OAAZ,CAAoB,8FAApB,CAApB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B,CAJkC,CAKlC;;AACA,QAAMC,QAAQ,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,GAA0BC,OAA1B,EAAvB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACHX,IAAAA,KAAK,EAAC;AACF;AACAC,MAAAA,OAAO,EAACO,QAAQ,CAACI,GAAT,CAAaC,MAAM,KAAI;AAC3BC,QAAAA,KAAK,EAACD,MAAM,CAACC,KADc;AAE3BC,QAAAA,OAAO,EAACF,MAAM,CAACE,OAFY;AAG3BC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAHc;AAI3BC,QAAAA,EAAE,EAACJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAJ,CAAnB;AAFN,KADH;AAUDC,IAAAA,UAAU,EAAC,CAVV,CAUW;;AAVX,GAAP;AAYH;AAAA;AACD,eAAerB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n// const DUMMY_MEETUPS = [\r\n//     {\r\n//         id:'h3',\r\n//         title:\"First Meetup\",\r\n//         image:'https://costar.brightspotcdn.com/dims4/default/e1b9846/2147483647/strip/true/crop/2100x1485+0+0/resize/2100x1485!/quality/100/?url=http%3A%2F%2Fcostar-brightspot.s3.amazonaws.com%2F10%2Ff0%2F261bc7174a77905a8ba8c5a2a4aa%2Fchicago.jpg',\r\n//         address:'some city in some town',\r\n//         description:'THes is a first meetup'\r\n//     },\r\n//     {\r\n//         id:'h1',\r\n//         title:\"First Meetup City\",\r\n//         image:'https://blog.se.com/wp-content/uploads/2020/12/GettyImages-946784972_1200x628.jpg',\r\n//         address:'some city in some town 2',\r\n//         description:'THes is a first meetup 2'\r\n//     }\r\n// ];\r\nfunction HomePage (props){\r\n    return (<MeetupList meetups={props.meetups} />);\r\n};\r\n// export async function getServerSideProps(context){\r\n//     const req=context.req;\r\n//     const res=context.res;\r\n//     //fetch data from API\r\n//     return {\r\n//         props:{\r\n//             meetups:DUMMY_MEETUPS\r\n//         }\r\n//     };\r\n// };\r\nexport async function getStaticProps(){\r\n    //fetch data from API\r\n    const client =await MongoClient.connect('mongodb+srv://olegi4:457465@cluster0.0r1jbpg.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db=client.db();\r\n    const meetupsCollections = db.collection('meetups');\r\n    // const response = await meetupsCollections.insertOne(data);\r\n    const meetupss = await meetupsCollections.find().toArray();\r\n    client.close();\r\n    return {\r\n        props:{\r\n            // meetups:DUMMY_MEETUPS\r\n            meetups:meetupss.map(meetup =>({\r\n                title:meetup.title,\r\n                address:meetup.address,\r\n                image:meetup.image,\r\n                id:meetup._id.toString(),\r\n            }))\r\n        }\r\n         ,revalidate:1//every 10 seconds data will me regenerated to update itself\r\n    };\r\n};\r\nexport default HomePage;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}