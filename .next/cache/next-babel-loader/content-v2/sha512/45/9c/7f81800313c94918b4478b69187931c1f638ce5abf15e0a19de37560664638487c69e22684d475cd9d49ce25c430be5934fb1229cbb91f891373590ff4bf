{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Rct\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar SelectedMeetupPage = function SelectedMeetupPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: \"h1\",\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = SelectedMeetupPage;\nexport var __N_SSG = true;\nexport default SelectedMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedMeetupPage\");","map":{"version":3,"sources":["D:/Rct/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","SelectedMeetupPage","props","meetupData","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAH1B;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAJ5B;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AALhC;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMN,kB;;AAuEN,eAAeA,kBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst SelectedMeetupPage = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      id=\"h1\"\r\n      title={props.meetupData.title}\r\n      image={props.meetupData.image}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://olegi4:457465@cluster0.0r1jbpg.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n  // const response = await meetupsCollections.insertOne(data);\r\n  const meetupss = await meetupsCollections.find({}, { _id: 1 }).toArray(); //find in every obj in array but only id\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetupss.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    //   [  {\r\n    //         params:{\r\n    //             meetupId:'h1'\r\n    //         }\r\n    //     },\r\n    //     {\r\n    //         params:{\r\n    //             meetupId:'h3'\r\n    //         }\r\n    //     }\r\n    // ]\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  // console.log('meetupId',meetupId);\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://olegi4:457465@cluster0.0r1jbpg.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n  // const response = await meetupsCollections.insertOne(data);\r\n  const selectedMeetup = await meetupsCollections.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id:selectedMeetup._id.toString(),\r\n        title:selectedMeetup.title,\r\n        address:selectedMeetup.address,\r\n        image:selectedMeetup.image,\r\n        description:selectedMeetup.description,\r\n      }\r\n\r\n      // {\r\n      //     id:meetupId,\r\n      //     title:\"First Meetup\",\r\n      //     image:'https://costar.brightspotcdn.com/dims4/default/e1b9846/2147483647/strip/true/crop/2100x1485+0+0/resize/2100x1485!/quality/100/?url=http%3A%2F%2Fcostar-brightspot.s3.amazonaws.com%2F10%2Ff0%2F261bc7174a77905a8ba8c5a2a4aa%2Fchicago.jpg',\r\n      //     address:'some city in some town',\r\n      //     description:'THes is a first meetup'\r\n      // }\r\n    },\r\n  };\r\n}\r\nexport default SelectedMeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}